<?php

/**
 * Implements hook_menu().
 */
function beauty_world_cup_menu() {
  // Note: we can't dynamically append destination to querystring.
  // Do so at theme layer. Fix in D7?
  $items['world_cup'] = array(
    'title' => '首页',
    'page callback' => 'beauty_world_cup_pages',
    'access callback' => true,
  );
  $items['world_cup/news/detail/%'] = array(
    'title' => '首页',
    'page callback' => 'beauty_world_cup_page_news_detail',
    'page arguments' => array(3),
    'access callback' => true,
  );
  $items['world_cup/hair'] = array(
    'title' => '发型库',
    'page callback' => 'beauty_world_cup_pages_hair',
    'access callback' => true,
  );
  $items['world_cup/hair/big/%beauty_hairstyle'] = array(
    'title' => '发型库',
    'page callback' => 'beauty_world_cup_pages_hair_big',
    'page arguments' => array(3),
    'access callback' => true,
  );
  $items['world_cup/hair/advantage'] = array(
    'title' => '剪个球星头',
    'page callback' => 'beauty_world_cup_page_hair_advantage',
    'access callback' => true,
  );
  return $items;
}

function beauty_world_cup_pages() {
    $banner_news = db_select('node', 'n')
            ->fields('n')
            ->condition('sticky', 1, '=')
            ->condition('type', 'beauty_news', '=')
            ->condition('status', 1, '=')
            ->orderBy('created', 'desc')
            ->range(0,1)
            ->execute()
            ->fetchAllKeyed();
    $frontpage_news = db_select('node', 'n')
            ->fields('n')
            ->condition('promote', 1, '=')
            ->condition('sticky', 1, '<>')
            ->condition('type', 'beauty_news', '=')
            ->condition('status', 1, '=')
            ->orderBy('created', 'desc')
            ->range(0,3)
            ->execute()
            ->fetchAllKeyed();
    return theme('beauty_world_cup_frontpage', array('banner_news' => $banner_news, 'frontpage_news' => $frontpage_news));
}

function beauty_world_cup_page_news_detail($nid) {
    $news = node_load($nid);
    if ($news->type <> 'beauty_news') {
        return drupal_access_denied();
    }
    return theme('beauty_world_cup_news_detail', array('news' => $news));
}

/**
 * HOOK_theme
 */
function beauty_world_cup_theme() {
  return array(
    'beauty_world_cup_frontpage' => array(
      'template' => 'beauty-world-cup-frontpage',
      'variables' => array('banner_news' => NULL, 'frontpage_news' => NULL),
      'file' => 'theme.inc',
      'path' => drupal_get_path('module', 'beauty_world_cup') . '/theme',
    ),
    'beauty_world_cup_news_detail' => array(
      'template' => 'beauty-world-cup-news-detail',
      'variables' => array('news' => NULL),
      'file' => 'theme.inc',
      'path' => drupal_get_path('module', 'beauty_world_cup') . '/theme',
    ),
    'beauty_world_cup_hair' => array(
      'template' => 'beauty-world-cup-hair',
      'variables' => array('hairstyles' => NULL, 'tags' => NULL),
      'file' => 'theme.inc',
      'path' => drupal_get_path('module', 'beauty_world_cup') . '/theme',
    ),
    'beauty_world_cup_hair_big' => array(
      'template' => 'beauty-world-cup-hair-big',
      'variables' => array('hairstyle' => NULL),
      'file' => 'theme.inc',
      'path' => drupal_get_path('module', 'beauty_world_cup') . '/theme',
    ),
    'beauty_world_cup_hair_advantage' => array(
      'template' => 'beauty-world-cup-hair-advantage',
      'variables' => array('banner_video' => NULL, 'advantage_videos' => NULL),
      'file' => 'theme.inc',
      'path' => drupal_get_path('module', 'beauty_world_cup') . '/theme',
    ),
  );
}

function beauty_world_cup_pages_hair() {
    beauty_add_normal_js();
    $termid = arg(2);
    $query = db_select('beauty_hairstyle', 'bh');
    if (is_numeric($termid)) {
        $query->join('field_data_field_hairstyle_tags', 'fdfht', 'fdfht.entity_id = bh.hid');
        $query->condition('fdfht.field_hairstyle_tags_tid', $termid, '=');
    }
    $query->addField('bh', 'hid');
    $query->orderBy('bh.hid', 'desc');
    $result = $query->execute();
    foreach ($result as $row) {
        $rows[] = $row->hid;
    }
    $hairstyles = beauty_hairstyle_load_multiple($rows);

    $tags = taxonomy_get_tree(2); //TODO vid is required

    return theme('beauty_world_cup_hair', array('hairstyles' => $hairstyles, 'tags' => $tags));
}

function beauty_world_cup_pages_hair_big(Entity $beauty_hairstyle) {

    $barber = beauty_barber_load($beauty_hairstyle->bid);
    $shop = beauty_shop_load($beauty_barber->sid);
    return theme('beauty_world_cup_hair_big', array('hairstyle' => $beauty_hairstyle));
}

function beauty_world_cup_page_hair_advantage() {
  $banner_video = db_select('node', 'n')
    ->fields('n')
    ->condition('sticky', 1, '=')
    ->condition('type', 'beauty_video', '=')
    ->condition('status', 1, '=')
    ->orderBy('created', 'desc')
    ->range(0,1)
    ->execute()
    ->fetchAllKeyed();
  $advantage_videos = db_select('node', 'n')
    ->fields('n')
    ->condition('promote', 1, '=')
    ->condition('sticky', 1, '<>')
    ->condition('type', 'beauty_video', '=')
    ->condition('status', 1, '=')
    ->orderBy('created', 'desc')
    ->execute()
    ->fetchAllKeyed();

  return theme('beauty_world_cup_hair_advantage', array('banner_video' => $banner_video, 'advantage_videos' => $advantage_videos));
}
