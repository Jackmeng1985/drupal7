<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Implements hook_menu().
 */
function beauty_weibo_menu() {
  $items = array();
  $items['weibo/oauth'] = array(
    'title' => 'Weibo Redirect',
    'page callback' => 'beauty_weibo_redirect',
    'access arguments' => array('access weibo api'),
    'type' => MENU_CALLBACK,
  );

  $items['weibo/oauth/callback'] = array(
    'title' => 'Authentication callback',
    'page callback' => 'beauty_weibo_callback',
    'access arguments' => array('access weibo api'),
    'type' => MENU_CALLBACK,
  );

 $items['weibo/api'] = array(
    'title' => 'Weibo api',
    'page callback' => 'beauty_weibo_api',
    'access arguments' => array('access weibo api'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/weibo'] = array(
    'title' => 'Weibo oauth settings',
    'description' => 'Configure the Weibo App Key and App Secret.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('beauty_weibo_admin_settings'),
    'access arguments' => array('administer weibo'),
    'file' => 'beauty_weibo.admin.inc',
  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function beauty_weibo_permission() {
  return array(
    'administer weibo' => array(
      'title' => t('Administer Weibo'),
      'description' => t('Configure Weibo.'),
    ),
    'access weibo api' => array(
      'title' => t('access weibo api.'),
      'description' => t('access weibo api.'),
    ),
  );
}

/**
 * Menu callback: Weibo Redirect.
 */
function beauty_weibo_redirect() {
  $parameters = array(
    'client_id' => variable_get('weibo_appkey', ''),
    'redirect_uri' => url('weibo/oauth/callback', array('absolute' => TRUE)),
    'response_type' => 'code',
  );
  $oauth_url = 'https://api.weibo.com/oauth2/authorize';
  drupal_goto($oauth_url, array('query' => $parameters));
}

/**
 * Menu callback: Weibo Callback.
 */
function beauty_weibo_callback() {
  $request = $_REQUEST;

  if (isset($request['code'])) {
    $parameters = array(
      'client_id' => variable_get('weibo_appkey', ''),
      'client_secret' => variable_get('weibo_appsecret', ''),
      'grant_type' => 'authorization_code',
      'redirect_uri' => url('weibo/oauth/callback', array('absolute' => TRUE)),
      'code' => $request['code'],
    );

    $param_data = array(
      'method' => 'POST',
      'data' => drupal_http_build_query($parameters),
    );

    $access_token_uri = 'https://api.weibo.com/oauth2/access_token';

    $http = drupal_http_request(url($access_token_uri, array('query' => $parameters)), $param_data);
    $data = drupal_json_decode($http->data);

    $access_token = $data['access_token'];

    $_SESSION['weibo']['access_token'] = $access_token;
    drupal_goto('weibo/api');
  }
}

function beauty_weibo_api() {

    if (isset($_SESSION['weibo']['idstr'])) {
        $mid = beauty_weibo_api_get_midstr($_SESSION['weibo']['idstr']);
        $reposts_result = beauty_weibo_api_get_reposts($mid);

        foreach ($reposts_result['reposts'] as $repost) {
            $record = new stdClass;
            $record->rwid = $mid;
            $record->wid = $repost['id']; // id <> mid ?
            $record->rrwid = $repost['retweeted_status']['id'];
            $record->text = beauty_weibo_api_replace4byte($repost['text']);
            $record->source = $repost['source'];
            $record->reposts_count = $repost['reposts_count'];
            $record->comments_count = $repost['comments_count'];
            $record->uid = $repost['user']['id'];
            $record->name = $repost['user']['name'];
            
            $location = explode(' ', $repost['user']['location']);
            $record->location_province = $location[0];
            $record->location_city = isset($location[1]) ? $location[1] : '';
            $record->url = $repost['user']['url'];
            $record->profile_image_url = $repost['user']['profile_image_url'];
            $record->gender = $repost['user']['gender'];
            $record->followers_count = $repost['user']['followers_count'];
            $record->friends_count = $repost['user']['friends_count'];
            $record->favourites_count = $repost['user']['favourites_count'];
            $record->following = (int)$repost['user']['following'];
            $record->verified = (int)$repost['user']['verified'];
            $record->created = $repost['user']['name'];
            $record->created = strtotime($repost['created_at']);
            $record->data = $repost;
            drupal_write_record('beauty_weibo_repost', $record);
        }
        unset($_SESSION['weibo']['idstr']);
        drupal_goto('weibo/reposts/' .$mid);
    }
    return drupal_get_form('beauty_weibo_api_form_post_crawler');
}

function beauty_weibo_api_get_reposts($mid) {
    $cache = &drupal_static(__FUNCTION__, array());
    if (isset($cache['mid'])) {
        return $cache['mid'];
    }

    $api = 'https://api.weibo.com/2/statuses/repost_timeline.json';
    $param = array(
        'access_token' => $_SESSION['weibo']['access_token'],
        'id' => $mid,
        'count' => 200
    );
    $result_json = file_get_contents($api .'?' . drupal_http_build_query($param));
    $result = drupal_json_decode($result_json);
    if ($result['total_number'] > 200) {

    }
    return $result;
}

function beauty_weibo_api_get_midstr($midstr) {
    $mid_api = 'http://api.t.sina.com.cn/queryid.json';

    $mid_json = file_get_contents($mid_api . '?mid=' . $midstr . '&isBase62=1&type=2');
    $mid_json = drupal_json_decode($mid_json);
    return $mid_json['id'];
}

function beauty_weibo_api_get_mid($mid) {
    $mid_api = 'http://api.t.sina.com.cn/querymid.json';

    $mid_json = file_get_contents($mid_api . '?id=' . $mid);
    $mid_json = drupal_json_decode($mid_json);
    return $mid_json['mid'];
}

function beauty_weibo_api_form_post_crawler() {
    $form = array();
    $form['strid'] = array(
        '#type' => 'textfield',
        '#title' => '微博字符串id',
        '#default_value' => isset($_SESSION['weibo']['idstr']) ? $_SESSION['weibo']['idstr'] : '',
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => '提交',
    );
    return $form;
}

function beauty_weibo_api_form_post_crawler_submit($form, $form_state) {
    $_SESSION['weibo']['idstr'] = $form_state['values']['strid'];
}

function beauty_weibo_api_replace4byte($string) {
    return preg_replace('%(?:
          \xF0[\x90-\xBF][\x80-\xBF]{2}      # planes 1-3
        | [\xF1-\xF3][\x80-\xBF]{3}          # planes 4-15
        | \xF4[\x80-\x8F][\x80-\xBF]{2}      # plane 16
    )%xs', '', $string);
}

/**
 *
 */
function beauty_weibo_custom_theme(){
    if (arg(0) == 'weibo') {
        return 'rubik';
    }
}


/**
 * Implements hook_views_api().
 */
function beauty_weibo_views_api() {
  return array(
    'api' => 3,
    'template path' => drupal_get_path('module', 'beauty_weibo') . '/themes',
  );
}
